{"version":3,"sources":["components/filter.js","services/person.js","components/personForm.js","components/persons.js","components/notification.js","App.js","index.js"],"names":["Filter","persons","useState","filterPersons","setFilterPersons","onChange","event","filter","person","name","toLowerCase","includes","target","value","map","key","number","baseUrl","axios","get","newPerson","post","id","delete","put","PersonForm","setPersons","setNotification","newName","setNewName","newNumber","setNewNumber","onSubmit","preventDefault","sameName","find","window","alert","confirm","personService","then","res","i","data","text","type","setTimeout","concat","Person","onClick","catch","error","Persons","Notification","showStyle","notification","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","App","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79d8b7ed.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Filter = ({ persons }) => {\r\n  const [filterPersons, setFilterPersons] = useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    setFilterPersons(\r\n      persons.filter((person) =>\r\n        person.name.toLowerCase().includes(event.target.value.toLowerCase())\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>\r\n        filter shown with <input onChange={handleChange} />\r\n      </p>\r\n      {filterPersons.map((person) => (\r\n        <p key={person.name}>\r\n          {person.name} {person.number}\r\n        </p>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"http://localhost:3001/api/persons\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl);\r\n};\r\n\r\nconst create = (newPerson) => {\r\n  return axios.post(baseUrl, newPerson);\r\n};\r\n\r\nconst remove = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`);\r\n};\r\n\r\nconst update = (newPerson, id) => {\r\n  return axios.put(`${baseUrl}/${id}`, newPerson);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  remove,\r\n  update,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport personService from \"../services/person\";\r\n\r\nconst PersonForm = ({ persons, setPersons, setNotification }) => {\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n\r\n  const handleNameChange = (event) => setNewName(event.target.value);\r\n\r\n  const handleNumberChange = (event) => setNewNumber(event.target.value);\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault();\r\n    const newPerson = { name: newName, number: newNumber };\r\n    const sameName = persons.find((person) => person.name === newName);\r\n    if (sameName) {\r\n      window.alert(`${newName} is already added to phonebook`);\r\n    }\r\n    if (sameName) {\r\n      if (\r\n        window.confirm(\r\n          `${sameName.name} is already added to phonebook, replace the old number with a new one?`\r\n        )\r\n      ) {\r\n        personService\r\n          .update({ ...sameName, number: newNumber }, sameName.id)\r\n          .then((res) => {\r\n            setPersons(\r\n              persons.map((i) => (i.number !== newNumber ? i : res.data))\r\n            );\r\n          });\r\n        setNewName(\"\");\r\n        setNewNumber(\"\");\r\n        setNotification({\r\n          text: `Updated phone number of ${sameName.name}`,\r\n          type: \"success\",\r\n        });\r\n        setTimeout(() => setNotification(null), 5000);\r\n      }\r\n    } else {\r\n      personService.create(newPerson).then((res) => {\r\n        setPersons(persons.concat(res.data));\r\n        setNewName(\"\");\r\n        setNewNumber(\"\");\r\n        setNotification({ text: `Added ${newPerson.name}`, type: \"success\" });\r\n        setTimeout(() => setNotification(null), 5000);\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={addPerson}>\r\n      <div>\r\n        name: <input onChange={handleNameChange} value={newName} />\r\n      </div>\r\n      <div>\r\n        number: <input onChange={handleNumberChange} value={newNumber} />\r\n      </div>\r\n      <button type=\"submit\">add</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\nimport personService from \"../services/person\";\r\n\r\nconst Person = ({ person, setPersons, setNotification }) => {\r\n  const deletePerson = (event) => {\r\n    if (window.confirm(`Delete ${person.name}?`)) {\r\n      personService\r\n        .remove(person.id)\r\n        .then(() => {\r\n          setNotification({ text: `Deleted ${person.name} `, type: \"success\" });\r\n        })\r\n        .catch((error) => {\r\n          setNotification({\r\n            text: `Information of ${person.name} has already been removed from server`,\r\n            type: \"error\",\r\n          });\r\n        });\r\n      personService.getAll().then((res) => {\r\n        setPersons(res.data);\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <p>\r\n        {person.name} {person.number}\r\n        <button onClick={deletePerson}>delete</button>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Persons = ({ persons, setPersons, setNotification }) => {\r\n  return (\r\n    <div>\r\n      {persons.map((person) => (\r\n        <Person\r\n          key={person.name}\r\n          person={person}\r\n          setPersons={setPersons}\r\n          setNotification={setNotification}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (notification === null) {\r\n    return null;\r\n  }\r\n  let showStyle;\r\n  if (notification.type === \"success\") {\r\n    showStyle = {\r\n      color: \"green\",\r\n      background: \"lightgrey\",\r\n      fontSize: 20,\r\n      borderStyle: \"solid\",\r\n      borderRadius: 5,\r\n      padding: 10,\r\n      marginBottom: 10,\r\n    };\r\n  } else {\r\n    showStyle = {\r\n      color: \"red\",\r\n      background: \"lightgrey\",\r\n      fontSize: 20,\r\n      borderStyle: \"solid\",\r\n      borderRadius: 5,\r\n      padding: 10,\r\n      marginBottom: 10,\r\n    };\r\n  }\r\n  return <div style={showStyle}>{notification.text}</div>;\r\n};\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Filter from \"./components/filter\";\r\nimport PersonForm from \"./components/personForm\";\r\nimport Persons from \"./components/persons\";\r\nimport Notification from \"./components/notification\";\r\nimport personService from \"./services/person\";\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [notification, setNotification] = useState(null);\r\n\r\n  useEffect(() => {\r\n    personService.getAll().then((res) => {\r\n      setPersons(res.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification notification={notification} />\r\n      <Filter persons={persons} />\r\n      <h3>Add a new</h3>\r\n      <PersonForm\r\n        persons={persons}\r\n        setPersons={setPersons}\r\n        setNotification={setNotification}\r\n      />\r\n      <h3>Numbers</h3>\r\n      <Persons\r\n        persons={persons}\r\n        setPersons={setPersons}\r\n        setNotification={setNotification}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}